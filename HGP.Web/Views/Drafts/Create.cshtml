@model HGP.Web.Models.Drafts.DraftCreateModel
@{
    ViewBag.Title = "Create Asset";
    ViewBag.MainClass = "content_left_sidebar";
    Layout = "~/Views/Shared/_PortalLayout.cshtml";
}
<h2>Create Draft Asset</h2>

@Styles.Render("~/bundles/dropzonestyles")
@Scripts.Render("~/bundles/dropzone")
@Styles.Render("~/bundles/summernotestyles")
@Scripts.Render("~/bundles/summernote")

<style  type="text/css">
    .dropzone .dz-preview .dz-image {
        width: 120px;
    }

    .dropzone img {
        vertical-align: middle;
        max-width: 95%;
        max-height: 95%;
    }

    .dropzone .dz-remove {
        position: absolute;
        top: 0;
        left: 0;
        margin-left: -10px;
        margin-top: -10px;
    }

    .dz-progress {
        /* progress bar covers file name */
        display: none !important;
    }

</style>
<div id="widget-grid">

    <div class="row">
        <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">

            <div class="jarviswidget well">

                <div role="content">
                    <div class="widget-body no-padding">
                        <div class="padding-left-10">


                            @using (Html.BeginRouteForm("PortalRoute", new { controller = "Drafts", portalTag = Model.SiteSettings.PortalTag, action = "Create" },
                                FormMethod.Post, new { id = "asset-createform", @class = "smart-form", role = "form", novalidate = "novalidate" }))
                            {
                                <fieldset>
                                    <div class="form-group">
                                        @Html.ValidationSummary("", new { @class = "text-danger" })

                                        @Html.HiddenFor(x => x.Id)
                                        @Html.HiddenFor(x => x.PortalId)
                                        @Html.HiddenFor(x => x.HitNumber)
                                        @Html.HiddenFor(x => x.OwnerId)
                                        @Html.HiddenFor(x => x.CreatedBy)
                                        @Html.HiddenFor(x => x.UpdatedBy)
                                        @Html.HiddenFor(x => x.SubmitForApproval)
                                        @Html.HiddenFor(x => x.Status)
                                        @Html.HiddenFor(x => x.DraftStatus)
                                        @Html.HiddenFor(x => x.IsVisible)
                                        @Html.HiddenFor(x => x.DisplayBookValue)
                                    </div>
                                </fieldset>

                                <fieldset>
                                    <legend>Listing details</legend>

                                    <div class="form-group">
                                        <label class="col-md-2 control-label">Title</label>
                                        <div class="col-md-10">
                                            @Html.TextBoxFor(m => m.Title, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </fieldset>

                                <fieldset>
                                    <div class="form-group">
                                        <label class="col-md-2 control-label">Category</label>
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.Category, new SelectList(
                                                Model.Categories.Select(x => new {Value = x, Text = x}),
                                                "Value",
                                                "Text"
                                                ), new { @style = "width: 385px;", @class = "form-control" })
                                        </div>
                                    </div>
                                    
                                    <div class="form-group">
                                        <label class="margin-left-15 padding-right-10 col-md-1 control-label text-right">Location</label>
                                        <div class="col-md-4">
                                            @Html.DropDownListFor(model => model.Location, new SelectList(
                                                Model.Locations.Select(x => new {Value = x, Text = x}),
                                                "Value",
                                                "Text"
                                                ), new { @style = "width: 385px;" , @class = "form-control" })
                                        </div>
                                    </div>
                                </fieldset>

                                <fieldset>
                                    <div class="form-group">
                                        <label class="col-md-2 control-label">Manufacturer</label>
                                        <div class="col-md-4 padding-right-20">
                                            @Html.TextBoxFor(m => m.Manufacturer, new { @class = "form-control" })
                                        </div>
                                    </div>

                                    <div class="form-group">
                                        <label class="padding-left-10 padding-right-10 col-md-1 control-label text-right">Model</label>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(m => m.ModelNumber, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </fieldset>

                                <fieldset>
                                    <div class="form-group">
                                        <label class="col-md-2 control-label">Serial Number</label>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(m => m.SerialNumber, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </fieldset>

                                <fieldset>
                                    <div class="form-group">
                                        <label class="col-md-2 control-label">Book Value</label>
                                        <div class="col-md-4">
                                            @Html.TextBoxFor(m => m.BookValue, new { @class = "form-control" })
                                        </div>
                                    </div>
                                </fieldset>

                                <fieldset>
                                    <div class="form-group">
                                        <label class="col-md-2 control-label">Images</label>
                                        <div class="col-md-10">
                                            <div id="mydropzone" class="dropzone">
                                                <div class="dz-message">Drop files here or click to upload.</div>
                                            </div>
                                        </div>
                                    </div>
                                </fieldset>


                                <fieldset>
                                    <div class="form-group">
                                        <label class="col-md-2 control-label">Description</label>
                                        <div class="col-md-10">
                                            <div id="descriptionEdit"></div>
                                        </div>
                                    </div>
                                    
                                    
                                    

                                </fieldset>

                                @Html.HiddenFor(x => x.Description)


                                <footer>
                                    <button id="draftSaveBtn" type="submit" class="btn btn-primary">
                                        Save Draft
                                    </button>
                                    <button id="draftSaveAndSubmitBtn" type="submit" class="btn btn-primary">
                                        Submit for Approval
                                    </button>
                                    <button id="cancelBtn" type="button" class="btn btn-default">
                                        Cancel
                                    </button>
                                </footer>

                            }
                        </div>
                    </div>
                </div>
            </div>
        </article>
    </div>
</div>

@section scripts {

    <script type="text/javascript">

        Dropzone.options.mydropzone =
        {
            url:
                '@Url.RouteUrl("PortalRoute", new {controller = "Drafts", action = "SaveUploadedFiles", hitNumber = @Model.HitNumber})',
            maxFilesize: 10,
            uploadMultiple: true,
            parallelUploads: 5,
            maxFiles: 20,
            thumbnailWidth: 120,
            thumbnailHeight: null,
            acceptedFiles: ".jpeg,.jpg,.png,.gif,.JPEG,.JPG,.PNG,.GIF,.pdf,.pub",
            init: function () {
                var _this = this;

                this.on("success",
                    function(file, response) {
                        $('.dz-progress').hide();
                        $('.dz-size').hide();
                        $('.dz-error-mark').hide();
                        console.log(response);
                        console.log(file);
                        cd = response;
                    });


                this.on("addedfile",
                    function(file) {
                        var removeButton =
                            Dropzone.createElement('<div class="dz-remove"><img data-dz-remove src="\\content\\img\\icons\\16\\s\\delete2.png\"></div>');
                        var _this = this;

                        $('.dz-progress').hide();
                        $('.dz-size').hide();
                        $('.dz-error-mark').hide();

                        removeButton.addEventListener("click",
                            function(e) {
                                e.preventDefault();
                                e.stopPropagation();
                                _this.removeFile(file);
                                $.ajax({
                                    type: 'POST',
                                    url: 'DeleteImage',
                                    data: file.name,
                                    dataType: 'json'
                                });
                            });
                        file.previewElement.appendChild(removeButton);
                    });

                //Add existing files into dropzone
                var mediaFiles = @Html.Raw(Json.Encode(Model.Media));
                mediaFiles.forEach(function(media) {
                    var tempFile = {
                        name: media.FileName,
                        size: 12345,
                        processing: true,
                        accepted: true,
                        type: media.ContentType,
                        status: Dropzone.SUCCESS
                    };
                    _this.files.push(tempFile);
                    _this.emit("addedfile", tempFile, media.ImageUrl);
                    _this.emit("thumbnail", tempFile, media.ThumbnailUrl);
                    _this.emit("processing", tempFile);
                    _this.emit("success", tempFile, { status: "success" }, false);
                    _this.emit("complete", tempFile);
                });

                this.on("complete",
                    function(data) {
                        //var res = eval('(' + data.xhr.responseText + ')');
                        var res = JSON.parse(data.xhr.responseText);
                    });
            }
            };

        $("#mydropzone").sortable({
            items:'.dz-preview',
            opacity: 0.7,
            containment: "parent",
            distance: 20,
            tolerance: 'pointer',
            cursor: 'pointer',
            dropOnEmpty: false,
            update: function (e, ui) {
                // do what you want
            }
        });

        function doSave() {
            var myDropzone = Dropzone.forElement("#mydropzone");
            var current_queue = [];
            var oldArray = myDropzone.files;
            var imageTags = $('#mydropzone').find('div.dz-image img');
            imageTags.each(function (index, imageTag) {
                // get the image name from the images
                var imageName = imageTag.alt;

                // now we will iterate through the old array
                var i;
                for (i = 0; i < oldArray.length; i++) {
                    /** if the name of the image on the website is the same as the image from the old array
                     * we will add it to the new array. You can see this as sorting the array.
                     */
                    if (imageName === oldArray[i].name) {
                        current_queue.push(oldArray[i]);
                    }
                }
            });
            myDropzone.files = current_queue;

            var files = myDropzone.files;
            var count = 0;
            files.forEach(function (s) {
                var fieldName = "Media[" + count + "].FileName";
                $('<input />').attr('type', 'hidden')
                    .attr('name', fieldName)
                    .attr('value', s.name)
                    .appendTo('#asset-createform');

                fieldName = "Media[" + count + "].ContentType";
                $('<input />').attr('type', 'hidden')
                    .attr('name', fieldName)
                    .attr('value', s.type)
                    .appendTo('#asset-createform');

                var validImageTypes = ["image/gif", "image/jpeg", "image/png", "image/svg+xml"];
                var isImage = ($.inArray(s.type, validImageTypes) >= 0);
                fieldName = "Media[" + count + "].IsImage";
                $('<input />').attr('type', 'hidden')
                    .attr('name', fieldName)
                    .attr('value', isImage)
                    .appendTo('#asset-createform');

                fieldName = "Media[" + count + "].SortOrder";
                $('<input />').attr('type', 'hidden')
                    .attr('name', fieldName)
                    .attr('value', count)
                    .appendTo('#asset-createform');

                count++;
            });

            var desc = $("#descriptionEdit").code();
            $('#Description').val(desc);

            $("#asset-createform").submit();
        }

        $("#draftSaveBtn").click(function () {
            $('#SubmitForApproval').val(false);
            doSave();
        });

        $('#draftSaveAndSubmitBtn').click(function () {
            $('#SubmitForApproval').val(true);
            doSave();
        });

        $('#descriptionEdit').summernote({
            focus: false,
            tabsize: 2,
            height: 300,
            disableDragAndDrop:true
        });
        var desc = $("#descriptionEdit").code('@Html.Raw(Model.Description)');

        // Get file extension
        function getFileExt(filename){
            filename = filename.toLowerCase();
            return filename.split('.').pop();
        }
    </script>


    <script type="text/javascript">
        $('#cancelBtn').click(function () {
            window.top.location = '@Url.RouteUrl("PortalRoute", new { controller = "Drafts", action = "Index" })';
        });
    </script>

}


