@using Microsoft.Ajax.Utilities
@model HGP.Web.Models.InBox.InBoxHomeModel
@{
    ViewBag.Title = "Inbox";
    ViewBag.MainClass = "content_full_width";
    Layout = "~/Views/Shared/_PortalLayout.cshtml";
}

<!-- widget grid -->
<section id="widget-grid" class="col padding-bottom-10">
    <div class="row">
        <article class="col-md-8 col-md-offset-3" style="margin-top: -146px; margin-left: 270px;">
            <div class="jarviswidget well">

                <div role="content">
                    <!-- widget content -->
                    <div class="widget-body">
                        <div id="inbox-content" class="inbox-body">
                            <div class="padding-left-10">
                                <div class="col-md-12">
                                    @if (!Model.DraftAssetItems.Any())
                                    {
                                        <h5 style="padding-bottom: 12px;">No draft approval requests found...</h5>
                                    }
                                    else
                                    {
                                        <div class="padding-bottom-10"><h3><strong>New Assets</strong></h3></div>
                                   

                                    <table id="product-grid" class="table table-hover">
                                        <thead>
                                            <tr>
                                                <th>ITEM</th>
                                                <th></th>
                                                <th>NBV</th>
                                                <th></th>
                                            </tr>
                                        </thead>
                                        <tbody id="list-container">
                                        @foreach (var inboxItem in Model.DraftAssetItems)
                                        {
                                                @Html.Hidden("AssetMessage_" + inboxItem.DraftAssetHitNumber, "")
                                                <tr>
                                                    <td width="100">
                                                        @if (inboxItem.DraftAsset.Media != null & inboxItem.DraftAsset.Media.Count > 0)
                                                        {<a href='@("/" + Model.SiteSettings.PortalTag + "/asset/index/" + inboxItem.DraftAsset.HitNumber)'>
                                                                <img height="64" width="64" src="@MyHelpers.DraftImageUrl(Html, Model.SiteSettings.PortalTag, inboxItem.DraftAsset.OwnerId,  inboxItem.DraftAsset.Media.FirstOrDefault(), "t")" />
                                                            </a>
                                                        }
                                                    </td>
                                                    <td>
                                                        <a href='@("/" + Model.SiteSettings.PortalTag + "/asset/index/" + inboxItem.DraftAsset.HitNumber)'>@inboxItem.DraftAsset.Title</a><br />Hit #: @inboxItem.DraftAsset.HitNumber
                                                        @if (!inboxItem.DraftAsset.ClientIdNumber.IsNullOrWhiteSpace())
                                                        {
                                                            @: / Client Id #@inboxItem.DraftAsset.ClientIdNumber
                                                        }
                                                    </td>

                                                    <td class="price">
                                                        <span>@MyHelpers.FormatCurrency(Html, inboxItem.DraftAsset.BookValue)</span>
                                                        
                                                    </td>
                                                    <td>
                                                        <p>
                                                            Owner: <strong>@inboxItem.DraftAsset.OwnerFirstName</strong> <strong>@inboxItem.DraftAsset.OwnerLastName</strong>
                                                        </p>
                                                        <p>
                                                            <i class="fa fa-fw fa-envelope-o"></i> <a href="mailto:@inboxItem.DraftAsset.OwnerEmail">@inboxItem.DraftAsset.OwnerEmail</a><br />
                                                            <i class="fa fa-fw fa-phone"></i> <span class="phone" data-phone="@inboxItem.DraftAsset.OwnerPhone"></span>
                                                        </p>
                                                        <p>Status: <strong>@inboxItem.Status</strong> </p>
                                                        <br />
                                                        @if (inboxItem.DraftAsset.DraftStatus == GlobalConstants.DraftAssetStatusTypes.SubmittedForApproval)
                                                        {
                                                            <button class="btn btn-sm bg-color-blue txt-color-white" data-original-title="" onclick="approveAsset('@inboxItem.DraftAssetHitNumber');">Approve Asset</button>
                                                            <button class="btn btn-sm bg-color-blue txt-color-white" data-original-title="" onclick="denyAsset('@inboxItem.DraftAssetHitNumber');">Deny Asset</button>
                                                        }
                                                        <hr />
                                                    </td>

                                                </tr>
                                            }
                                        </tbody>
                                    </table>
                                    <hr />
                                        <hr />
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- end widget content -->
                </div>
            </div>
            <!-- end widget -->
        </article>
    </div>
</section>
<!-- end widget grid -->


<!-- widget grid -->
<section id="widget-grid2" class="col">

    <div class="row">
        <article class="col-md-8 col-md-offset-3" style="margin-left: 270px;">
            <div class="jarviswidget well">
                <header>
                    <h2><strong>Inbox</strong></h2>
                </header>
                <div role="content">
                    <!-- widget content -->
                    <div class="widget-body">
                        <div id="inbox-content2" class="inbox-body ">
                            <div class="padding-left-10">
                                <div class="col-md-12">
                                    @if (!Model.RequestItems.Any())
                                    {
                                        <h5 style="padding-bottom: 12px;">No pending transfer requests found...</h5>
                                    }
                                    else
                                    {
                                        <div class="padding-bottom-10">
                                            <h3><strong>Pending Requests</strong></h3>
                                        </div>



                                        foreach (var inboxItem in Model.RequestItems.Where(x => x.Status == GlobalConstants.InboxStatusTypes.Pending))
                                        {
                                            <div class="row padding-10">
                                                <div class="col-md-12">
                                                    <p>
                                                        Requestor: <strong>@inboxItem.Data.RequestorName</strong> Request number:<strong>@inboxItem.Data.RequestNum</strong>
                                                    </p>
                                                    <p>
                                                        Date: <strong>@inboxItem.Data.RequestDate</strong> Assets: <strong>@inboxItem.Data.AssetCount</strong>
                                                    </p>
                                                    <p>Book value: @MyHelpers.FormatCurrency(Html, @inboxItem.Data.AssetRequests.Sum(x => decimal.Parse(x.BookValue) * x.Quantity))</p>
                                                    @{
                                                        if (!(string.IsNullOrEmpty(inboxItem.Data.Notes)))
                                                        {
                                                            <p>Request Note: <strong>@inboxItem.Data.Notes</strong></p>
                                                        }
                                                    }
                                                    <div class="row">
                                                        <div class="padding-10">
                                                            <table id="product-grid" class="table table-hover">
                                                                <thead>
                                                                    <tr>
                                                                        <th>ITEM</th>
                                                                        <th></th>
                                                                        <th>NBV</th>
                                                                        <th></th>
                                                                    </tr>
                                                                </thead>
                                                                <tbody id="list-container">
                                                                    @foreach (var assetRequest in inboxItem.Data.AssetRequests)
                                                                    {
                                                                        @Html.Hidden("Message_" + assetRequest.Id, "")
                                                                        <tr>
                                                                            <td width="100">
                                                                                @if (assetRequest.Media != null & assetRequest.Media.Count > 0)
                                                                                {
                                                                                    <a href='@("/" + Model.SiteSettings.PortalTag + "/asset/index/" + assetRequest.HitNumber)'>
                                                                                        <img src='@("https://s3-us-west-1.amazonaws.com/hgpmedia/" + Model.SiteSettings.PortalTag + "/t/" + assetRequest.Media[0].FileName)' />
                                                                                    </a>
                                                                                }
                                                                            </td>
                                                                            <td>
                                                                                <a href='@("/" + Model.SiteSettings.PortalTag + "/asset/index/" + assetRequest.HitNumber)'>@assetRequest.Title</a><br />Hit #: @assetRequest.HitNumber
                                                                                @if (!assetRequest.ClientIdNumber.IsNullOrWhiteSpace())
                                                                                {
                                                                                    @: / Client Id #@assetRequest.ClientIdNumber
                                                                                }
                                                                            </td>

                                                                            <td class="price">
                                                                                @if (assetRequest.DisplayBookValue)
                                                                                {
                                                                                    <span>@MyHelpers.FormatCurrency(Html, assetRequest.BookValue)</span>
                                                                                }
                                                                                else
                                                                                {
                                                                                    <span>@Model.SiteSettings.BookValueMessage</span>
                                                                                }
                                                                            </td>
                                                                            <td>
                                                                                <p>
                                                                                    Owner: <strong>@assetRequest.OwnerName</strong>
                                                                                </p>
                                                                                <p>
                                                                                    <i class="fa fa-fw fa-envelope-o"></i> <a href="mailto:@assetRequest.OwnerEmail">@assetRequest.OwnerEmail</a><br />
                                                                                    <i class="fa fa-fw fa-phone"></i> <span class="phone" data-phone="@assetRequest.OwnerPhone"></span>
                                                                                </p>
                                                                                <p>Status: <strong>@assetRequest.Status</strong> </p>
                                                                                @{
                                                                                    if (!(string.IsNullOrEmpty(assetRequest.TaskComment)))
                                                                                    {
                                                                                        <p>Comment: <strong>@assetRequest.TaskComment</strong></p>
                                                                                    }
                                                                                }
                                                                                <br />
                                                                                @if (assetRequest.Status == GlobalConstants.RequestStatusTypes.Pending)
                                                                                {
                                                                                    <button class="btn btn-sm bg-color-blue txt-color-white" data-original-title="" onclick="approveRequest('@inboxItem.Data.Id', '@assetRequest.Id');">Approve Request</button>
                                                                                    <button class="btn btn-sm bg-color-blue txt-color-white" data-original-title="" onclick="denyRequest('@inboxItem.Data.Id', '@assetRequest.Id');">Deny Request</button>
                                                                                }
                                                                                <hr />
                                                                            </td>

                                                                        </tr>
                                                                    }
                                                                </tbody>
                                                            </table>
                                                            <hr />
                                                            <hr />
                                                        </div>
                                                    </div>
                                                </div>
                                            </div>
                                        }
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- end widget content -->
                </div>
            </div>
            <!-- end widget -->
        </article>
    </div>
</section>
<!-- end widget grid -->


<div class="row margin-bottom-10 hide">
    <div class="col-md-2 col-md-offset-2">

        <a id="messageModalTrigger" data-toggle="modal" data-id="" href="#MyMessageModal" class="btn btn-success pull-right header-btn hidden-mobile"><i class="fa fa-plus"></i> Message</a>

    </div>
</div>

<!-- Request Modal -->
<div class="modal fade" id="MyMessageModal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h1 class="modal-title">
                    <i class="icon-warning-sign"></i> Message to Requestor
                </h1>
                <h5>Enter the reason for approving or denying this request which will be sent to the requestor.</h5>
            </div>
            <div class="modal-body no-padding">
                @using (Html.BeginForm(string.Empty, string.Empty, FormMethod.Post, new { @class = "smart-form", role = "form" }))
                {
                    <fieldset>
                        <div class="row">
                            <section class="col col-8 form-group">
                                <label class="input">
                                    @Html.TextArea("MessageTextArea", "", 5, 60, new { @placeholder = "Message" })
                                </label>
                            </section>
                        </div>
                    </fieldset>

                    <footer>
                        <button id="messageSaveBtn" type="button" class="btn btn-primary">
                            Save
                        </button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">
                            Cancel
                        </button>
                    </footer>
                    <input type="hidden" id="actionType" />
                }

            </div>
        </div><!-- /.modal-content -->
    </div>
    <!-- /.modal-dialog -->
</div>

<div class="row margin-bottom-10 hide">
    <div class="col-md-2 col-md-offset-2">

        <a id="assetMessageModalTrigger" data-toggle="modal" data-id="" href="#MyAssetMessageModal" class="btn btn-success pull-right header-btn hidden-mobile"><i class="fa fa-plus"></i> Message</a>

    </div>
</div>

<!-- Asset Modal -->
<div class="modal fade" id="MyAssetMessageModal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h1 class="modal-title">
                    <i class="icon-warning-sign"></i> Message to Asset Owner
                </h1>
                <h5>Enter the reason for denying this asset which will be sent to the person who created it.</h5>
            </div>
            <div class="modal-body no-padding">
                @using (Html.BeginForm(string.Empty, string.Empty, FormMethod.Post, new { @class = "smart-form", role = "form" }))
                {
                    <fieldset>
                        <div class="row">
                            <section class="col col-8 form-group">
                                <label class="input">
                                    @Html.TextArea("AssetMessageTextArea", "", 5, 60, new { @placeholder = "Message" })
                                </label>
                            </section>
                        </div>
                    </fieldset>

                    <footer>
                        <button id="messageSaveBtnAsset" type="button" class="btn btn-primary">
                            Save
                        </button>
                        <button type="button" class="btn btn-default" data-dismiss="modal">
                            Cancel
                        </button>
                    </footer>
                }

            </div>
        </div><!-- /.modal-content -->
    </div>
</div>   <!-- /.modal-dialog -->
    

    <script>
        $(document).ready(function () {
            $("#messageSaveBtn").on("click", function () {
                $('#MyMessageModal').modal('hide');
                var assetReqId = $('#messageModalTrigger').data('assetRequestId');
                var reqId = $('#messageModalTrigger').data('requestId');
                var message = $('#MessageTextArea').val();
                $('#Message_' + assetReqId).val(message);
                var action = $('#actionType').val();
                if (action == "approve") {
                    doApproveRequest(reqId, assetReqId, message);
                } else {
                    doDenyRequest(reqId, assetReqId, message);
                }
            });

        });

        $(document).ready(function () {
            $("#messageSaveBtnAsset").on("click", function () {
                $('#MyAssetMessageModal').modal('hide');
                var assetHitNum = $('#assetMessageModalTrigger').data('assetHitNumber');
                var message = $('#AssetMessageTextArea').val();
                $('#AssetMessage_' + assetHitNum).val(message);
                doDenyAsset(assetHitNum, message);
            });

        });
    </script>

<!-- /.modal -->
@section Scripts {

    <script type="text/javascript">
        $(document).ready(function() {
            $("span.phone").each(function() {
                var $this = $(this);
                var data = formatPhoneNumber($this.data('phone'));
                $this.html(data);
            });

            $("#phone2").html(function(i, DATA) {
                var data = formatPhoneNumber(DATA);
                return data;
            });

            function formatPhoneNumber(s) {
                var s2 = ("" + s).replace(/\D/g, '');
                var m = s2.match(/^(\d{3})(\d{3})(\d{4})$/);
                return (!m) ? null : "(" + m[1] + ") " + m[2] + "-" + m[3];
            }
        });

        function approveRequest(requestId, assetRequestId) {
                $('#messageModalTrigger').data("assetRequestId", assetRequestId);
                $('#messageModalTrigger').data("requestId", requestId);
                $('#actionType').val("approve");
                $('#MyMessageModal').modal('show');
        }

        function doApproveRequest(requestId, assetRequestId, message) {
            var action = '@Url.RouteUrl("PortalRoute", new {action = "approve", controller = "request"})';
            var jsonData = JSON.stringify({ "id": assetRequestId, "requestId": requestId, "message": message });
            var returnUrl = '@Url.RouteUrl("PortalRoute", new {action = "index", controller = "portal"})';

            $.ajax({
                url: action,
                type: "POST",
                dataType: "json",
                contentType: "application/json charset=utf-8",
                data: jsonData,
                processData: false,
                success: function(data) {
                    if (data == 'success') {
                        if ((returnUrl) && (returnUrl.length > 0))
                            location.reload();
                        else
                            location.reload();
                    } else {
                        displayErrors(form, data.Errors);
                    }
                },
                error: function(jqXhr, textStatus, errorThrown) {
                    alert("Error '" +
                        jqXhr.status +
                        "' (textStatus: '" +
                        textStatus +
                        "', errorThrown: '" +
                        errorThrown +
                        "')");
                },
                complete: function() {
                }
            });
        }

        function denyRequest(requestId, assetRequestId) {
                $('#messageModalTrigger').data("assetRequestId", assetRequestId);
                $('#messageModalTrigger').data("requestId", requestId);
                $('#actionType').val("deny");
                $('#MyMessageModal').modal('show');
            }

        function doDenyRequest(requestId, assetRequestId, message) {
            var action = '@Url.RouteUrl("PortalRoute", new {action = "deny", controller = "request"})';
            var jsonData = JSON.stringify({ "id": assetRequestId, "requestId": requestId, "message": message });
            var returnUrl = '@Url.RouteUrl("PortalRoute", new {action = "index", controller = "portal"})';

            $.ajax({
                url: action,
                type: "POST",
                dataType: "json",
                contentType: "application/json charset=utf-8",
                data: jsonData,
                processData: false,
                success: function(data) {
                    if (data == 'success') {
                        if ((returnUrl) && (returnUrl.length > 0))
                            location.reload();
                        else
                            location.reload();
                    } else {
                        displayErrors(form, data.Errors);
                    }
                },
                error: function(jqXhr, textStatus, errorThrown) {
                    alert("Error '" +
                        jqXhr.status +
                        "' (textStatus: '" +
                        textStatus +
                        "', errorThrown: '" +
                        errorThrown +
                        "')");
                },
                complete: function() {
                }
            });
        }



                function approveAsset(assetHitNumber) {
                    doApproveAsset(assetHitNumber);
                }

        function doApproveAsset(assetHitNumber) {
            var action = '@Url.RouteUrl("PortalRoute", new {action = "approve", controller = "Drafts"})';
            var jsonData = JSON.stringify({ "draftAssetHitNumber": assetHitNumber });
            var returnUrl = '@Url.RouteUrl("PortalRoute", new {action = "index", controller = "portal"})';

            $.ajax({
                url: action,
                type: "POST",
                dataType: "json",
                contentType: "application/json charset=utf-8",
                data: jsonData,
                processData: false,
                success: function (data) {
                    if (data.success) {
                        window.location.reload(false);
                    } else {
                        displayErrors(form, data.Errors);
                    }
                },
                error: function(jqXhr, textStatus, errorThrown) {
                    alert("Error '" +
                        jqXhr.status +
                        "' (textStatus: '" +
                        textStatus +
                        "', errorThrown: '" +
                        errorThrown +
                        "')");
                },
                complete: function() {
                }
            });
        }

        function denyAsset(assetHitNumber) {
            $('#assetMessageModalTrigger').data("assetHitNumber", assetHitNumber);
            $('#MyAssetMessageModal').modal('show');
            }

        function doDenyAsset(assetHitNumber, message) {
            var action = '@Url.RouteUrl("PortalRoute", new {action = "deny", controller = "Drafts"})';
            var jsonData = JSON.stringify({ "draftAssetHitNumber": assetHitNumber, "message": message });
            var returnUrl = '@Url.RouteUrl("PortalRoute", new {action = "index", controller = "portal"})';

            $.ajax({
                url: action,
                type: "POST",
                dataType: "json",
                contentType: "application/json charset=utf-8",
                data: jsonData,
                processData: false,
                success: function (data) {
                    if (data.success) {
                        window.location.reload(false);
                    }
                },
                error: function(jqXhr, textStatus, errorThrown) {
                    alert("Error '" +
                        jqXhr.status +
                        "' (textStatus: '" +
                        textStatus +
                        "', errorThrown: '" +
                        errorThrown +
                        "')");
                },
                complete: function() {
                }
            });
        }
    </script>
}