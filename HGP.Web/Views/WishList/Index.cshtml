@model HGP.Web.Models.WishLists.WishListHomeModel
@using HGP.Web.Models.WishLists
@{
    Layout = "~/Views/Shared/_PortalLayout.cshtml";
    ViewBag.MainClass = "content_full_width";
    ViewBag.Title = "WishList";
}

<style>
    a.disabled {
        color: gray;
    }

    #product-grid td label.mouse_link:hover {
        text-decoration: underline;
    }

    .main-area {
        width: 980px;
        margin: 0 auto;
    }

    /*b {
    background-color: white !important;
    }*/

    .table.table-hover tr td b {
        background: none !important;
    }
</style>

<section id="widget-grid" class="">

    <div class="tt-icon-box-fixed text-align-left padding-bottom-5">
        <div class="col-sm-6">
            <h3 class="margin-top-0">
                Your wish list
            </h3>
        </div>
        <div>
            <a id="SaveWishListAnchor" onclick="refreshWishListModalFn();" data-toggle="modal" href="#addModal" class="btn btn-success header-btn hidden-mobile">
                <i class="fa fa-plus"></i> Add new wish
            </a>
        </div>
    </div>

    <div class="row">
        <article class="col-xs-12 col-sm-12 col-md-12 col-lg-12">
            <div class="jarviswidget well">
                <div role="content">
                    <!-- widget content -->
                    <div class="widget-body no-padding">
                        <div class="row">
                            <div class="col-md-11 col-md-offset-1" style="margin-left:4.4%">
                                <div id="pending-requests" class="padding-10 no-padding-left">
                                    @if (!Model.WishListDetails.Any())
                                    {
                                        <h3 class="margin-top-0">
                                            No wishes found
                                        </h3>
                                    }
                                    else
                                    {
                                        <table id="product-grid" class="table table-striped table-hover">
                                            <tbody id="list-container">
                                            <tr>
                                                <td>
                                                    <div class="row">
                                                        <div class="col-md-12">
                                                            <table id="product-grid" class="table table-hover">
                                                                <thead>
                                                                <tr>
                                                                    <th width="50%">Keywords</th>
                                                                    <th width="30%" style="text-align:center">Send email</th>
                                                                    <th width="20%">Actions</th>
                                                                </tr>
                                                                </thead>
                                                                <tbody id="list-container">
                                                                @foreach (WishListDetails WishListDetails in Model.WishListDetails)
                                                                {
                                                                    <tr>
                                                                        <td width="100">
                                                                            <b>@WishListDetails.WishList.SearchCriteria</b>
                                                                            @{
                                                                                DateTime ExpireOn = WishListDetails.WishList.ExpireOn;

                                                                                int remainingDays = Convert.ToInt32((ExpireOn.Date - DateTime.Now.Date).TotalDays);
                                                                            }
                                                                            <p>Expires : @ExpireOn</p>
                                                                            <p> Expires in: @remainingDays days</p>
                                                                        </td>
                                                                        <td style="text-align:center">
                                                                            @Html.CheckBox("SwitchEmail", WishListDetails.WishList.SendMail, new {@Id = "switch_" + WishListDetails.WishList.Id, @onclick = "switchEmailFn('" + WishListDetails.WishList.Id + "')"})
                                                                        </td>
                                                                        <td>
                                                                            <p>
                                                                                <a id="RemoveWishListAnchor" href="#" onclick="removeWishListFn('@WishListDetails.WishList.Id');" class="mouse_link" style="color: #275b89; font-weight: bold;">Remove</a>
                                                                            </p>
                                                                            <p>
                                                                                @{
                                                                                    var extendAction = Url.RouteUrl("PortalRoute", new {portaltag = Model.HeaderModel.PortalTag, action = "Extend", controller = "WishList", wishListID = WishListDetails.WishList.Id});
                                                                                }
                                                                                <a href="@extendAction" style="color: #275b89; font-weight: bold;">Extend</a>
                                                                            </p>
                                                                            <p>
                                                                                @{
                                                                                    var action = Url.RouteUrl("PortalRoute", new {portaltag = Model.HeaderModel.PortalTag, action = "WishListResult", controller = "WishList", wishListID = WishListDetails.WishList.Id});
                                                                                }
                                                                                <a href="@action" style="color: #275b89; font-weight: bold;">View assets</a>
                                                                            </p>
                                                                            <p>
                                                                                <a id="EditWishListAnchor" onclick="SetEditModal('@WishListDetails.WishList.Id', '@WishListDetails.WishList.SearchCriteria');" data-toggle="modal" href="#editModal" class="hidden-mobile" style="color: #275b89; font-weight: bold;">Edit wish</a>
                                                                            </p>

                                                                        </td>

                                                                    </tr>
                                                                }
                                                                </tbody>
                                                            </table>
                                                        </div>
                                                    </div>
                                                </td>
                                            </tr>

                                            </tbody>
                                        </table>
                                    }
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- end widget content -->
                </div>
            </div>
            <!-- end widget div -->
        </article>
    </div>
</section>

<!-- ADD Modal -->
<div class="modal fade" id="addModal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h1 class="modal-title">
                    Add New Wish
                </h1>
            </div>
            <div class="modal-body no-padding">
                @using (Html.BeginRouteForm("PortalRoute", new { controller = "WishList", Action = "Create" }, FormMethod.Post, new { @class = "smart-form", role = "form", enctype = "multipart/form-data" }))
                {
                <fieldset>
                    <section>
                        <div class="form-group">
                            <label class="control-label">Search Keywords:</label>
                            <div class="col-md-10">
                                <input type="text" class="" id="WishListText" name="SearchCriteria" , class="form-control" placeholder="Keyword, manufacturer, model" size="60">
                                <p class="help-block" id="errorP" style="color:red;display:none;"></p>
                            </div>
                        </div>
                    </section>
                </fieldset>
                <footer>
                    <button type="button" class="btn btn-primary" id="SaveWishListBtn" onclick="SaveWishListFn();">
                        Save
                    </button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        Cancel
                    </button>
                </footer>
                }
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<!-- /.modal -->
<!-- EDIT Modal -->
<div class="modal fade" id="editModal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h1 class="modal-title">
                    Edit WishList
                </h1>
            </div>
            <div class="modal-body no-padding">
                @using (Html.BeginRouteForm("PortalRoute", new { controller = "WishList", Action = "Edit" }, FormMethod.Post, new { @class = "smart-form", role = "form", enctype = "multipart/form-data" }))
                {
                <fieldset>
                    <section>

                        <div class="form-group">
                            <label class="control-label">Search Keywords:</label>
                            <div class="col-md-10">
                                <input type="text" class="" id="EditWishListText" name="SearchCriteria" , class="form-control" placeholder="Keyword, manufacturer, model" size="60">
                                <input type="hidden" id="hdnWishListID" />
                                <p class="help-block" id="errorEditP" style="color:red;display:none;"></p>
                            </div>
                        </div>
                    </section>
                </fieldset>
                <footer>
                    <button type="button" class="btn btn-primary" id="EditWishListBtn" onclick="EditWishListFn();">
                        Save
                    </button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        Cancel
                    </button>
                </footer>
                }

            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<!-- /.modal -->
<!-- REMOVE Modal -->
<div class="modal fade" id="removeModal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
                <h1 class="modal-title">
                    Remove WishList
                </h1>
            </div>
            <div class="modal-body no-padding">
                @using (Html.BeginRouteForm("PortalRoute", new { controller = "WishList", Action = "Delete" }, FormMethod.Post, new { @class = "smart-form", role = "form", enctype = "multipart/form-data" }))
                {
                <fieldset>
                    <section>

                        <div class="form-group">
                            <label class="col-md-2 control-label">Search Criteria</label>
                            <div class="col-md-10">
                                <p id="SearchCriteriaP"></p>
                            </div>
                        </div>

                        <div class="form-group">
                            <label class="col-md-2 control-label"> ExpiresOn </label>
                            <div class="col-md-10">
                                <p id="ExpiresOnP"></p>
                            </div>
                        </div>

                        <input type="hidden" id="hdnWishListIDRemove" />

                    </section>
                </fieldset>
                <footer>
                    <button type="button" class="btn btn-primary" id="removeWishListBtn" onclick="removeWishListFn();">
                        Remove
                    </button>
                    <button type="button" class="btn btn-default" data-dismiss="modal">
                        Cancel
                    </button>
                </footer>
                }

            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>
<!-- /.modal -->


@section scripts {

    <script>

        $(document).ready(function () {

            $(".search-form").css("display", "none");
            $("#HeaderModel_SearchText").css("display", "none");

        });

        function refreshWishListModalFn() {
            $("#WishListText").val("");
            $("#errorP").text("");
        }

        function SaveWishListFn() {

            var wishListText = $("#WishListText").val();

            if (wishListText.length > 0) {

                var action = '@Url.RouteUrl("PortalRoute", new {action = "Create", controller = "WishList"})';
                var jsonData = JSON.stringify({ "searchCriteria": wishListText });
                var returnUrl = '@Url.RouteUrl("PortalRoute", new {action = "Index", controller = "WishList"})';

                $.ajax({
                    url: action,
                    type: "POST",
                    dataType: "json",
                    contentType: "application/json charset=utf-8",
                    data: jsonData,
                    processData: false,
                    success: function (data) {
                        if (data.success) {

                            $('#addModal').modal('hide');

                            if ((returnUrl) && (returnUrl.length > 0))
                            { location.href = returnUrl; }
                            else
                            { location.reload(); }

                        } else {
                            $("#errorP").text(data.message).css("display", "block");
                            setTimeout(function () {
                                $("#errorP").text("").css("display", "none");
                            },
                                3000);
                        }
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        $("#errorP").text(
                            "Error '" +
                            jqXhr.status +
                            "' (textStatus: '" +
                            textStatus +
                            "', errorThrown: '" +
                            errorThrown +
                            "')"
                        ).css("display", "block");

                        setTimeout(function () {
                            $("#errorP").text("").css("display", "block");
                        },
                            3000);
                    }
                });
            } else {
                $("#errorP").text("Search keywords are required.").css("display", "block");

                setTimeout(function () {
                    $("#errorP").text("").css("display", "none");
                },
                    3000);

                return false;
            }
        }

        function SetEditModal(wishListID, searchCriteria) {
            $("#hdnWishListID").val("");
            $("#EditWishListText").val("");

            $("#hdnWishListID").val(wishListID);
            $("#EditWishListText").val(searchCriteria);

        }

        function EditWishListFn() {

            var editWishListText = $("#EditWishListText").val();
            var editWishListID = $("#hdnWishListID").val();

            if (editWishListID.length > 0 && editWishListText.length > 0) {

                var action = '@Url.RouteUrl("PortalRoute", new {action = "Edit", controller = "WishList"})';
                var jsonData = JSON.stringify({ "wishListID": editWishListID, "searchCriteria": editWishListText });
                var returnUrl = '@Url.RouteUrl("PortalRoute", new {action = "Index", controller = "WishList"})';

                $.ajax({
                    url: action,
                    type: "POST",
                    dataType: "json",
                    contentType: "application/json charset=utf-8",
                    data: jsonData,
                    processData: false,
                    success: function (data) {
                        if (data.success) {
                            $('#editModal').modal('hide');

                            if (data.success) {
                                if ((returnUrl) && (returnUrl.length > 0))
                                { location.href = returnUrl; }
                                else
                                { location.reload(); }
                            }

                        } else {
                            $("#errorEditP").text(data.message).css("display", "block");
                            setTimeout(function () {
                                $("#errorEditP").text("").css("display", "none");
                            },
                                3000);
                        }
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        $("#errorEditP").text(
                            "Error '" +
                            jqXhr.status +
                            "' (textStatus: '" +
                            textStatus +
                            "', errorThrown: '" +
                            errorThrown +
                            "')"
                        ).css("display", "block");

                        setTimeout(function () {
                            $("#errorEditP").text("").css("display", "block");
                        },
                            3000);
                    }
                });
            } else {
                $("#errorEditP").text("Search keywords are required.").css("display", "block");

                setTimeout(function () {
                    $("#errorEditP").text("").css("display", "none");
                },
                    3000);

                return false;
            }
        }

        function removeWishListFn(wishListID) {
            if (wishListID.length > 0) {
                var action = '@Url.RouteUrl("PortalRoute", new {action = "Delete", controller = "WishList"})';
                var jsonData = JSON.stringify({ "wishListID": wishListID });
                var returnUrl = '@Url.RouteUrl("PortalRoute", new {action = "Index", controller = "WishList"})';

                $.ajax({
                    url: action,
                    type: "POST",
                    dataType: "json",
                    contentType: "application/json charset=utf-8",
                    data: jsonData,
                    processData: false,
                    success: function (data) {
                        if (data.success) {
                            if ((returnUrl) && (returnUrl.length > 0))
                            { location.href = returnUrl; }
                            else
                            { location.reload(); }
                        }
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        alert("Error '" +
                            jqXhr.status +
                            "' (textStatus: '" +
                            textStatus +
                            "', errorThrown: '" +
                            errorThrown +
                            "')");
                    }
                });
            } else {
                alert("An error occur. Please try again later.");
            }
        }

        function sendEmailFn(WishListID) {

            if (WishListID.length > 0) {
                $("#" + WishListID).attr('disabled', true);

                var action =
                    '@Url.RouteUrl("PortalRoute", new {action = "SendWishListMatchedAssetEmail", controller = "WishList"})';
                var jsonData = JSON.stringify({ "wishListID": WishListID });
                var returnUrl = '@Url.RouteUrl("PortalRoute", new {action = "Index", controller = "WishList"})';

                $.ajax({
                    url: action,
                    type: "POST",
                    dataType: "json",
                    contentType: "application/json charset=utf-8",
                    data: jsonData,
                    processData: false,
                    success: function (data) {
                        if (data.success) {
                            if (data.success) {
                                if ((returnUrl) && (returnUrl.length > 0))
                                { location.href = returnUrl; }
                                else
                                { location.reload(); }
                            }
                        }
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        alert("Error '" +
                            jqXhr.status +
                            "' (textStatus: '" +
                            textStatus +
                            "', errorThrown: '" +
                            errorThrown +
                            "')");
                    }
                });
            } else {
                alert("An error occur. Please try again later.");
            }
        }

        function switchEmailFn(wishListID) {
           
            if (wishListID.length > 0) {

                var sendMail = false;

                if ($('#switch_' + wishListID).prop("checked") == true) {
                    sendMail = true;
                    $("#" + wishListID).css("display", "inline-block");
                }
                else if ($('#switch_' + wishListID).prop("checked") == false) {
                    sendMail = false;
                    $("#" + wishListID).css("display", "none");
                }

                var action = '@Url.RouteUrl("PortalRoute", new {action = "EditSendMail", controller = "WishList"})';
                var jsonData = JSON.stringify({ "wishListID": wishListID, "sendMail": sendMail });
                var returnUrl = '@Url.RouteUrl("PortalRoute", new {action = "Index", controller = "WishList"})';

                $.ajax({
                    url: action,
                    type: "POST",
                    dataType: "json",
                    contentType: "application/json charset=utf-8",
                    data: jsonData,
                    processData: false,
                    success: function (data) {
                        if (data.success) {

                            var cTitle = "";
                            var cColor = "";

                            if (data.success) {
                                cTitle = "Success!";
                                cColor = "#739E73";
                            }
                            else {
                                cTitle = "Error!";
                                cColor = "#C46A69r";
                            }

                            $.smallBox({
                                title: cTitle,
                                content: data.message,
                                color: cColor,
                                timeout: 10000,
                                iconSmall: "fa fa-bell fa-thumbs-up animated"
                            });

                        }
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        alert("Error '" +
                            jqXhr.status +
                            "' (textStatus: '" +
                            textStatus +
                            "', errorThrown: '" +
                            errorThrown +
                            "')");
                    }
                });
            } else {
                alert("An error occur. Please try again later.");
            }
        }

    </script>

}