@model HGP.Web.Models.WishLists.WishListResultHomeModel

@{
    ViewBag.Title = "Index";
    ViewBag.MainClass = "content_left_sidebar";
    Layout = "~/Views/Shared/_PortalLayout.cshtml";
}

<section id="widget-grid" class="">
            <!-- widget div -->
    <div class="jarviswidget">
               
                <div id="content" class="widget-body no-padding">
                    <!-- widget content -->
                    <div class="">
                        <div class="row">
                            <div class="">
                                <div class="padding-10 margin-left-10 ">
                                    <h3 class="margin-top-0 margin-left-10">
                                        @{
                                            if (Model.Assets == null || Model.Assets.Count <= 0)
                                            {
                                                @:No assets found matching: <strong>@Model.WishList.SearchCriteria</strong>
                                            }
                                            else
                                            {
                                                @Model.Assets.Count
                                                @: @MyHelpers.Pluralize(Html, "asset", Model.Assets.Count, isStrong: false)
                                                @:matching your wish: <strong>@Model.WishList.SearchCriteria</strong>
                                            }
                                        }
                                    </h3>

                                    <div class="pull-right padding-right-10">
                                        <a id="SaveWishListAnchor" onclick="removeWishListFn('@Model.WishList.Id');" data-toggle="modal" class="btn btn-success header-btn hidden-mobile">
                                            <i class="fa fa-minus"></i> Remove wish
                                        </a>
                                    </div>

                                    <input type="hidden" value="@Model.WishList.Id" id="hdnWishLIstID"/>

                                </div>

                            </div>
                        </div>

                        <div class="row">
                            <div class="col-md-11 col-md-offset-1">
                                <div id="pending-requests" class="padding-10 no-padding-left">
                                    <div class="row">
                                        <div class="col-md-12">
                                            @if (Model.Assets != null && Model.Assets.Count > 0)
                                            {

                                                <table id="product-grid" class="table table-striped table-hover" style="width: 100%;">

                                                    <thead>
                                                        <tr>
                                                            <th></th>
                                                            <th>Description</th>
                                                            <th>@*Book Value*@ </th>
                                                        </tr>
                                                    </thead>
                                                    <tbody id="list-container" data-bind="template: { name: 'listbody-tmpl', foreach: myViewModel.model.Assets }"></tbody>

                                                </table>

                                                <script id="listbody-tmpl" type="text/html">
                                                    <tr class="ui-corner-all">
                                                        <td class="image-container">
                                                            <div data-bind="template: { name: 'media-tmpl', if: Media().length > 0 }"></div>
                                                        </td>
                                                        <td>
                                                            <a data-bind="attr: { href: '/' + myViewModel.model.SiteSettings.PortalTag() + '/asset/indexpartial/' + $data.HitNumber() }"
                                                               data-toggle="modal" data-target="#myAssetModal" class="modalLink"><span data-bind="text: Title"></span></a>
                                                            <div class="manu-line">
                                                                <span class="product-list-detail">
                                                                    <span data-bind="text: Manufacturer"></span> <span data-bind="text: ModelNumber"></span>
                                                                    <br /><span data-bind="text: Location"></span>
                                                                    <br />Hit #<span data-bind="text: HitNumber"></span>
                                                                    <span data-bind="if: ClientIdNumber() != '' ">
                                                                        <span data-bind="template: { name: 'clientid-tmpl', data: ClientIdNumber }"></span>
                                                                    </span>
                                                                    <div data-bind="if: DisplayBookValue() == true">
                                                                        <br />Book Value : <span class="price" data-bind="money: BookValue"></span>
                                                                    </div>
                                                                    <div data-bind="if: DisplayBookValue() == false">
                                                                        <br />Book Value : <span class="text" data-bind="text: myViewModel.model.SiteSettings.BookValueMessage"></span>
                                                                    </div>
                                                                    <div data-bind="if: MinutesRemaining() > 0">
                                                                        <br />Time remaining: <span type="text" data-bind="timeRemaining: MinutesRemaining"></span>
                                                                    </div>
                                                                    <div data-bind="if: MinutesRemaining() <= 0">
                                                                        <br /><span style="font-weight: bold;">ASSET NO LONGER AVAILABLE</span>
                                                                    </div>
                                                                    <div>
                                                                        <br />
                                                                        <br />                                                                       
                                                                        <button class="hidden" data-bind="click: ignoreMatchFn.bind($data, $data.Id() )">
                                                                            Ignore the Match
                                                                        </button>
                                                                    </div>
                                                                </span>
                                                            </div>
                                                        </td>
                                                        <td />
                                                    </tr>
                                                </script>

                                                <script id="media-tmpl" type="text/html">
                                                    <div data-bind="with: $data">
                                                        <span data-bind="text: $data.Media().Count"></span>
                                                        <img data-bind="attr: { src: 'https://s3-us-west-1.amazonaws.com/hgpmedia/' + myViewModel.model.SiteSettings.PortalTag() + '/l/' + $data.Media()[0].FileName() }" alt="" />
                                                    </div>
                                                </script>

                                                <script id="clientid-tmpl" type="text/html">
                                                    <span data-bind="if: $data ">
                                                        / Client Id #
                                                        <span data-bind="text: $data">
                                                        </span>
                                                    </span>
                                                </script>

                                            }
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- end widget content -->
                </div>
            </div>
            <!-- end widget div -->
</section>


<style>
    body .modal-dialog {
        width: 850px;
    }
</style>


<div class="modal fade" id="myAssetModal" tabindex="-1" role="dialog">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <button type="button" class="close" data-dismiss="modal" aria-hidden="true">
                    &times;
                </button>
            </div>
            <div class="modal-body no-padding">
            </div>
        </div><!-- /.modal-content -->
    </div><!-- /.modal-dialog -->
</div>

@section scripts
{
    <script src="~/Scripts/waypoints/waypoints.debug.js"></script>
    <script>
        function GetClosingTimeString(minutesRemaining) {
            if (minutesRemaining < 1)
                return "<1m";

            if (minutesRemaining < 60)
                return minutesRemaining + 'm';

            var daysRemaining = Math.floor(minutesRemaining / 1440);
            var hoursRemaining = Math.floor((minutesRemaining % 1440) / 60);

            if (daysRemaining > 1)
                return daysRemaining + 'd ' + hoursRemaining + 'h';

            return hoursRemaining + 'h';
        };

        ko.bindingHandlers.money = {
            update: function(element, valueAccessor, allBindingsAccessor) {
                var value = valueAccessor(), allBindings = allBindingsAccessor();
                var valueUnwrapped = ko.utils.unwrapObservable(value);
                var m = "";
                if (valueUnwrapped) {
                    m = valueUnwrapped;
                    if (m >= 0) {
                        m = numeral(m).format('$0,0'); //http://numeraljs.com/
                    }
                }
                if (m > '') {
                    $(element).text(m);
                }
            }
        };

        ko.bindingHandlers.timeRemaining = {
            update: function(element, valueAccessor, allBindingsAccessor) {
                var value = valueAccessor(), allBindings = allBindingsAccessor();
                var valueUnwrapped = ko.utils.unwrapObservable(value);

                var m = "";
                if (valueUnwrapped) {
                    m = valueUnwrapped;
                    if (m) {
                        m = GetClosingTimeString(m);
                    }
                }
                $(element).text(m);
            }
        };

        var initialHeaderData = @Html.Raw(Model.HeaderModel.JsonData);

        var headerViewModel = function() {
            var self = this;
            self.headerModel = ko.mapping.fromJS(initialHeaderData);
        };

        var initialData = @Html.Raw(Model.JsonData);
        var assetUrl = '@MyHelpers.AssetUrl(Url, Html, "Title", Model.SiteSettings.PortalTag, "HitNumber")';

        var viewModel = function() {
            var self = this;

            self.model = ko.mapping.fromJS(initialData);
            self.addToCart = function(hitNumber) {
                myHeaderViewModel.headerModel.Request.AssetCount(myHeaderViewModel.headerModel.Request.AssetCount() + 1);
                addToServerCart(hitNumber);
                $('#myAssetModal').modal('hide');
            };
        };

        var myViewModel = new viewModel();
        self.model = ko.mapping.fromJS(initialData);
        ko.applyBindings(myViewModel, $("#widget-grid").get(0));

        // Needed to prevent double-trigger
        Waypoint.destroyAll();

        $(document).on("hidden.bs.modal", function (e) {
            $(e.target).removeData("bs.modal").find(".modal-content").empty();
        });

        function addToServerCart(hitNumber) {
            var action = '@Url.RouteUrl("PortalRoute", new {action = "Add", controller = "Request"})';
            var jsonData = JSON.stringify({ "id": hitNumber });

            $.ajax({
                url: action,
                type: "POST",
                dataType: "json",
                contentType: "application/json charset=utf-8",
                data: jsonData,
                processData: false,
                success: function(data) {
                    if (data.Success) {
                        window.top.location = '/@Model.SiteSettings.PortalTag' + '/request?ref=' + window.location.pathname;
                    } else {
                        displayErrors(form, data.Errors);
                    }
                },
                error: function(jqXhr, textStatus, errorThrown) {
                    alert("Error '" + jqXhr.status + "' (textStatus: '" + textStatus + "', errorThrown: '" + errorThrown + "')");
                },
                complete: function() {
                }
            });
        }

        function displayErrors(form, errors) {
            var container = form.find("[data-valmsg-summary=true]"),
                list = container.find("ul");

            if (list && errors.length) {
                container.addClass("validation-summary-errors")
                    .removeClass("validation-summary-valid");

                list.empty();
                $.each(errors, function(index, value) {
                    list.append('<li>' + value + '</li>');
                });

                if (window.onValidatorSummaryShown) {
                    window.onValidatorSummaryShown.call(container);
                }
            }
        }

        function removeWishListFn(wishListID) {
            if (wishListID.length > 0) {
                var action = '@Url.RouteUrl("PortalRoute", new {action = "Delete", controller = "WishList"})';
                var jsonData = JSON.stringify({ "wishListID": wishListID });
                var returnUrl = '@Url.RouteUrl("PortalRoute", new {action = "Index", controller = "WishList"})';

                $.ajax({
                    url: action,
                    type: "POST",
                    dataType: "json",
                    contentType: "application/json charset=utf-8",
                    data: jsonData,
                    processData: false,
                    success: function (data) {
                        if (data.success) {
                            window.top.location = returnUrl;
                        }
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        alert("Error '" +
                            jqXhr.status +
                            "' (textStatus: '" +
                            textStatus +
                            "', errorThrown: '" +
                            errorThrown +
                            "')");
                    }
                });
            } else {
                alert("An error occur. Please try again later.");
            }
        }

        function ignoreMatchFn(assetID){

            var wishListID=$("#hdnWishLIstID").val();
          
            if(assetID.length>0&&wishListID.length>0){
                
                var action = '@Url.RouteUrl("PortalRoute", new {action = "IgnoreMatch", controller = "WishList"})';
                var jsonData = JSON.stringify({ "wishListID": wishListID, "assetID":assetID });
                //var returnUrl = '@Url.RouteUrl("PortalRoute", new {action = "Index", controller = "WishList" })';

                $.ajax({
                    url: action,
                    type: "POST",
                    dataType: "json",
                    contentType: "application/json charset=utf-8",
                    data: jsonData,
                    processData: false,
                    success: function (data) {
                        if (data.success) {
                                   
                            location.reload();
                            alert(data.message);

                        } else {
                            alert(data.message);
                        }
                    },
                    error: function (jqXhr, textStatus, errorThrown) {
                        alert("Error '" +
                           jqXhr.status +
                           "' (textStatus: '" +
                           textStatus +
                           "', errorThrown: '" +
                           errorThrown +
                           "')");
                    }
                });

            }
            else {
                alert("Some error occur. Please try again later.");
            }
             
        }


    </script>

    <script type="text/javascript">
        $(document).ready(function(){

            $(".search-form").css("display","none");
            $("#HeaderModel_SearchText").css("display","none");

        });
    </script>
}